归并排序算法是以一种基于分治思想的排序算法，时间复杂度为O(n(lg(n))
实现原理:
  先递归处理，到最低层时再向上归并，一直维护一个有序序列，直到整体排序完成
代码实现:
  int b[N]//归并过程中储存临时数据
  void merge_sort(int a[],int l,int r){
    if(l>=r) return ;//到达最底层时返回
    int mid=(l+r)>>1;//将序列折半处理
    merge_sort(a,l,mid);
    merge_sort(a,mid+1,r);//将左右两部分进行递归处理
    int m=l,n=mid+1,k=0;//创建左右指针，分别指向左右序列的最左端
    while(m<=mid&&n<=r){//当左右指针其中任意一个走完全程，结束比较
        if(a[m]<=a[n]) b[k++]=a[m++];//左指针指向的数据较小，加入储存数组，同时前进
        else b[k++]=a[n++];//右指针同理
    }
    while(m<=mid)b[k++]=a[m++];//将左序列全部储存
    while(n<=r)b[k++]=a[n++];//将右序列全部储存
    for(int i=l,j=0;i<=r;i++) a[i]=b[j++];//将临时数据返回原序列
}
